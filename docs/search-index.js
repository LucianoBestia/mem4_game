var N=null,E="",T="t",U="u",searchIndex={};
var R=["mem4_common","ws_uid","mem4_common::WsMessage","anything","my_ws_uid","ws client instance unique id. To not listen the echo to…","players","json of vector of players","all players","Accepted","end game","try_from","borrow_mut","try_into","result","type_id","serialize","deserialize","WsMessage","GameState","RootRenderingComponent","mem4_server","rootrenderingcomponent","player_turn","my_player_number","What player am I","gamedata","websocket","vdomweak","mem4::gamedata","value_from","value_into","approx_into","approx_from","to_owned","clone_into","borrow","typeid","mem4::playersandscores","as_any_mut","mem4::rulesanddescription","This rendering will be rendered and then cached . It will…","GameConfig","GameData","CardStatusCardFace","PlayersAndScores","RulesAndDescription","field for src attribute for HTML element imagea and…","asked_folder_name","content folder name","game_config","game_state","gamestate","mem4::rootrenderingcomponent","`mem4_server` - html and websocket server for the mem4…","local_ip_get","get local ip for windows with ipconfig","enable_ansi_support","ansi support","mem4_common - commons for mem4 wasm and server Learning to…","data for one player","`WsMessage` enum for websocket","RequestWsUid","Request websocket Uid - first message to WebSocket server","ResponseWsUid","response from WebSocket server for first message","your_ws_uid","websocket Uid","WantToPlay","want to play","AcceptPlay","accept play","GameDataInit","player1 initialize the game data ans sends it to all…","card_grid_data","act is the action to take on the receiver","json of game_config","PlayerClick","player click","this identifies the smartphone, but not the player-in-turn","card_index","card index","game state PlayerBefore1Card or PlayerBefore2Card","PlayerChange","player change","EndGame","RequestGameConfig","Request the game_config from the WebSocket server","filename","the file with the game_config","ResponseGameConfigJson","Receive the game_config from the WebSocket server","the game_config from the server","the game can be in various states and that differentiate…","the start of the game","Player1 Asking WantToPlay","Player2 is asked WantToPlay","PlayBefore1Card","Play before first card","PlayBefore2Card","Play before second card","take turn (after the second card)","Reconnect","Reconnect after a lost connection","PlayAccepted","TakeTurn","msg player click","gamestatus","mem4::divplayersandscores","mem4::divrulesanddescription","game_status","game status PlayerBefore1Card or PlayerBefore2Card","PlayAgain","GameStatus","`mem4_common` - commons for mem4 wasm and server Learning…","PlayAccept","WantToPlayAskBegin","want to play ask begin","WantToPlayAsking","Player1 WantToPlay Asking","WantToPlayAsked","Player2 WantToPlay Asked","on click","render Play or Wait","`mem4_server` - html and WebSocket server for the mem4…","TakeTurnEnd","field for src attribute for HTML element image and…","`WsMessage` enum for WebSocket","Request WebSocket Uid - first message to WebSocket server","WebSocket Uid","player1 initialize the game data and sends it to all…","PlayerClick1Card","PlayerClick2Card","Play Again","the game can be in various statuses and that differentiate…"];
searchIndex["mem4"]={"doc":"mem4 - Learning Rust and Wasm/WebAssembly with Virtual Dom…","i":[[5,"run","mem4","To start the Wasm application, wasm_bindgen runs this…",N,[[],[[R[14],["jsvalue"]],["jsvalue"]]]],[5,"session_storage",E,"Get the top-level window's session storage. TODO: to save…",N,[[],["storage"]]],[0,"divcardmoniker",E,"divcardmoniker.rs - renders the card moniker (card…",N,N],[5,"div_grid_card_moniker","mem4::divcardmoniker","the header can show only the game title or two card…",N,[[["bump"],[R[22]]],["node"]]],[17,"GAME_TITLE",E,"game title",N,N],[0,"divgridcontainer","mem4","divgridcontainer.rs - renders the grid container with the…",N,N],[5,"div_grid_container","mem4::divgridcontainer","prepare the grid container",N,[[["size2d"],["bump"],[R[22]]],["node"]]],[5,"div_grid_items",E,"prepare a vector for the Virtual Dom for 'css grid' item…",N,[[["bump"],[R[22]]],[["node"],["vec",["node"]]]]],[5,"div_grid_item",E,"on click is the most important part and here is more or…",N,[[["str"],["bump"],[R[22]]],["node"]]],[5,"div_grid_item_on_click",E,R[122],N,[[[R[22]],["usize"]]]],[5,"grid_width",E,"grid width in pixels",N,[[],["usize"]]],[5,"grid_height",E,"grid height in pixels",N,[[],["usize"]]],[5,"max_grid_size",E,"calculate max with and height for a grid in pixels",N,[[[R[22]]],["size2d"]]],[17,"SRC_FOR_CARD_FACE_DOWN",E,"fixed filename for card face down",N,N],[0,"divplayeractions","mem4","divplayeractions.rs - renders the div to inform player…",N,N],[5,"div_player_actions_from_game_status","mem4::divplayeractions","render html element to inform player what to do and get a…",N,[[["bump"],[R[22]]],["node"]]],[5,"div_unpredicted",E,"render unpredicted",N,[[["bump"],[R[22]]],["node"]]],[0,"divplayersandscores","mem4","divplayersandscores.rs - renders the div that shows…",N,N],[3,R[45],R[108],"Render Component: player score Its private fields are a…",N,N],[12,R[23],E,"whose turn is now:  player 1 or 2",0,N],[12,"my_points",E,"my points",0,N],[12,R[24],E,R[25],0,N],[12,R[4],E,"my ws client instance unique id.",0,N],[11,"new",E,"constructor",0,[[["usize"]],["self"]]],[11,"update_intern_cache",E,"copies the data from game data to internal cache internal…",0,[[["self"],[R[26]]],["bool"]]],[0,"divrulesanddescription","mem4","divrulesanddescription.rs - renders the div that shows…",N,N],[3,R[46],R[109],"Render Component: The static parts can be cached easily.",N,N],[5,"text_with_br_newline",E,"change the newline lines ending into  node",N,[[["str"],["bump"]],[["node"],["vec",["node"]]]]],[17,"GAME_RULES",E,"Text of game rules. Multiline string literal just works.…",N,N],[17,"GAME_DESCRIPTION",E,"game description",N,N],[0,R[26],"mem4","game data - structs and methods around game data",N,N],[3,"Size2d",R[29],"2d size (any UM -pixel, items, percent)",N,N],[12,"hor",E,"horizontal",1,N],[12,"ver",E,"vertical",1,N],[3,R[42],E,"game config",N,N],[12,"card_moniker",E,"card moniker - the text/name of the card the zero element…",2,N],[12,"card_width",E,"card image width",2,N],[12,"card_height",E,"card image height",2,N],[12,"grid_items_hor",E,"number of cards horizontally",2,N],[12,"grid_items_ver",E,"number of card vertically",2,N],[3,"Card",E,"all the data for one card",N,N],[12,"status",E,"card status",3,N],[12,"card_number_and_img_src",E,R[47],3,N],[12,"card_index_and_id",E,"field for id attribute for HTML element image contains the…",3,N],[3,R[43],E,"game data",N,N],[12,R[110],E,"game status:…",4,N],[12,"vec_cards",E,"vector of cards",4,N],[12,"card_index_of_first_click",E,"card index of first click",4,N],[12,"card_index_of_second_click",E,"card index of second click",4,N],[12,"ws",E,"web socket. used it to send message onclick.",4,N],[12,R[4],E,"my ws client instance unique id. To not listen the echo to…",4,N],[12,R[6],E,R[6],4,N],[12,"content_folder_name",E,R[49],4,N],[12,R[48],E,"invite asks for a specific game",4,N],[12,R[24],E,R[25],4,N],[12,R[23],E,"whose turn is now:  player 1,2,3,...",4,N],[12,"content_folders",E,"content folders vector",4,N],[12,R[50],E,"game_configs",4,N],[12,"error_text",E,"error text",4,N],[12,"href",E,"href",4,N],[12,"is_reconnect",E,"is reconnect",4,N],[4,R[44],E,"the 3 possible statuss of one card",N,N],[13,"Down",E,"card face down",5,N],[13,"UpTemporary",E,"card face Up Temporary",5,N],[13,"UpPermanently",E,"card face up Permanently",5,N],[17,"_IMPL_SERIALIZE_FOR_Size2d",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Size2d",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_GameConfig",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_GameConfig",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_CardStatusCardFace",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_CardStatusCardFace",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Card",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Card",E,E,N,N],[11,"prepare_random_data",E,"prepare new random data",4,[[["self"]]]],[11,"prepare_for_empty",E,"asociated function: before Accept, there are not random…",4,[[],[["card"],["vec",["card"]]]]],[11,"new",E,"constructor of game data",4,[[[R[27]],["usize"]],["self"]]],[11,"is_status_invite_ask_begin",E,"check only if status InviteAskBegin",4,[[["self"]],["bool"]]],[11,"is_status_for_grid_container",E,"the only statuss for rendering the grid container",4,[[["self"]],["bool"]]],[0,R[22],"mem4","rootrenderingcomponent.rs - renders the web page",N,N],[3,R[20],R[53],"Root Render Component: the card grid struct has all the…",N,N],[12,"game_data",E,"game data will be inside of Root, but reference for all…",6,N],[12,"cached_players_and_scores",E,"subComponent: score",6,N],[12,"cached_rules_and_description",E,"subComponent: the static parts can be cached. I am not…",6,N],[11,"new",E,"Construct a new `RootRenderingComponent` component. Only…",6,[[[R[27]],["usize"]],["self"]]],[11,"check_invalidate_for_all_components",E,"check invalidate render cache for all sub components",6,[[["self"]]]],[11,"game_data_init",E,"prepares the game data",6,[[["self"]]]],[11,"reset",E,"reset the data to replay the game",6,[[["self"]]]],[11,"on_response_ws_uid",E,"msg response with uid, just to check. because the…",6,[[["self"],["usize"]]]],[11,"on_msg_game_data_init",E,"on game data init",6,[[["str"],["self"]]]],[11,"on_response_game_config_json",E,"msg response game_config json",6,[[["str"],["self"]]]],[0,"statusinviteaskbegin","mem4","statusinviteaskbegin.rs - code flow from this status",N,N],[5,"div_invite_ask_begin","mem4::statusinviteaskbegin","render invite ask begin, ask to play for multiple…",N,[[["bump"],[R[22]]],["node"]]],[5,"div_invite_ask_begin_on_click",E,"on click updates some data and sends msgs msgs will be…",N,[[["str"],[R[22]]]]],[5,"on_msg_invite",E,"msg invite",N,[[["string"],[R[22]],["usize"]]]],[0,"statusinviteasked","mem4","statusinviteasked.rs - code flow from this status",N,N],[5,"div_invite_asked","mem4::statusinviteasked","render asked",N,[[["bump"],[R[22]]],["node"]]],[5,"div_invite_asked_on_click",E,R[122],N,[[[R[22]]]]],[5,"on_msg_play_accept",E,"msg accept play",N,[[[R[22]],["usize"]]]],[5,"div_play_accepted",E,"render play accepted",N,[[["bump"],[R[22]]],["node"]]],[0,"statusinviteasking","mem4","statusinviteasking.rs - code flow from this status",N,N],[5,"div_invite_asking","mem4::statusinviteasking","render",N,[[["bump"],[R[22]]],["node"]]],[0,"statusplaybefore1card","mem4","statusplaybefore1card.rs - code flow from this status",N,N],[5,"div_click_1_card","mem4::statusplaybefore1card",R[123],N,[[["bump"],[R[22]]],["node"]]],[5,"on_click_1_card",E,R[122],N,[[[R[22]],["usize"]]]],[5,"card_click_1_card",E,R[122],N,[[[R[22]]]]],[5,"on_msg_player_click_1_card",E,R[106],N,[[[R[107]],[R[22]],["usize"]]]],[0,"statusplaybefore2card","mem4","statusplaybefore2card.rs - code flow from this status",N,N],[5,"div_click_2_card","mem4::statusplaybefore2card",R[123],N,[[["bump"],[R[22]]],["node"]]],[5,"on_click_2_card",E,R[122],N,[[[R[22]],["usize"]]]],[5,"card_click_2_card",E,"on second click The on click event passed by JavaScript…",N,[[[R[22]]]]],[5,"on_msg_player_click_2_card",E,R[106],N,[[[R[107]],[R[22]],["usize"]]]],[5,"on_msg_play_again",E,R[106],N,[[[R[22]]]]],[0,"statustaketurnbegin","mem4","statustaketurnbegin.rs - code flow from this status",N,N],[5,"div_take_turn_begin","mem4::statustaketurnbegin","render take turn",N,[[["bump"],[R[22]]],["node"]]],[5,"take_turn_end",E,"fn on change for both click and we msg.",N,[[[R[22]]]]],[5,"on_msg_take_turn_end",E,"msg player change",N,[[[R[22]]]]],[0,"statusplayagain","mem4","statusplayagain.rs - code flow from this status",N,N],[5,"div_play_again","mem4::statusplayagain","play again",N,[[["bump"],[R[22]]],["node"]]],[0,"websocketcommunication","mem4","WebSocketcommunication.rs - module that cares about…",N,N],[5,"setup_ws_connection","mem4::websocketcommunication","setup WebSocket connection",N,[[["string"],["usize"]],[R[27]]]],[5,"setup_ws_msg_recv",E,"receive WebSocket msg callback. I don't understand this…",N,[[[R[27]],[R[28]]]]],[5,"setup_ws_onerror",E,"on error write it on the screen for debugging",N,[[[R[27]],[R[28]]]]],[5,"setup_ws_onclose",E,"on close WebSocket connection",N,[[[R[27]],[R[28]]]]],[5,"setup_all_ws_events",E,"setup all ws events",N,[[[R[27]],[R[28]]]]],[5,"ws_send_msg",E,"generic send ws message",N,[[[R[27]],["wsmessage"]]]],[0,"websocketreconnect","mem4","websocketreconnect.rs - reconnection for websocket must be…",N,N],[5,"div_reconnect","mem4::websocketreconnect","render reconnect",N,[[["bump"],[R[22]]],["node"]]],[11,"from",R[108],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[36],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[37]]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[],[R[14]]]],[11,R[30],E,E,0,[[["src"]],[R[14]]]],[11,R[31],E,E,0,[[],[R[14]]]],[11,R[32],E,E,0,[[],[R[14]]]],[11,R[33],E,E,0,[[["src"]],[R[14]]]],[11,R[11],E,E,0,[[["src"]],[R[14]]]],[11,R[13],E,E,0,[[],[R[14]]]],[11,"as_any",E,E,0,[[["self"]],["any"]]],[11,R[39],E,E,0,[[["self"]],["any"]]],[11,"from",R[109],E,7,[[[T]],[T]]],[11,"into",E,E,7,[[],[U]]],[11,R[11],E,E,7,[[[U]],[R[14]]]],[11,R[36],E,E,7,[[["self"]],[T]]],[11,R[15],E,E,7,[[["self"]],[R[37]]]],[11,R[12],E,E,7,[[["self"]],[T]]],[11,R[13],E,E,7,[[],[R[14]]]],[11,R[30],E,E,7,[[["src"]],[R[14]]]],[11,R[31],E,E,7,[[],[R[14]]]],[11,R[32],E,E,7,[[],[R[14]]]],[11,R[33],E,E,7,[[["src"]],[R[14]]]],[11,R[11],E,E,7,[[["src"]],[R[14]]]],[11,R[13],E,E,7,[[],[R[14]]]],[11,"as_any",E,E,7,[[["self"]],["any"]]],[11,R[39],E,E,7,[[["self"]],["any"]]],[11,"from",R[29],E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[34],E,E,1,[[["self"]],[T]]],[11,R[35],E,E,1,[[[T],["self"]]]],[11,R[11],E,E,1,[[[U]],[R[14]]]],[11,R[36],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[37]]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[],[R[14]]]],[11,R[30],E,E,1,[[["src"]],[R[14]]]],[11,R[31],E,E,1,[[],[R[14]]]],[11,R[32],E,E,1,[[],[R[14]]]],[11,R[33],E,E,1,[[["src"]],[R[14]]]],[11,R[11],E,E,1,[[["src"]],[R[14]]]],[11,R[13],E,E,1,[[],[R[14]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[34],E,E,2,[[["self"]],[T]]],[11,R[35],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[14]]]],[11,R[36],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[37]]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[],[R[14]]]],[11,R[30],E,E,2,[[["src"]],[R[14]]]],[11,R[31],E,E,2,[[],[R[14]]]],[11,R[32],E,E,2,[[],[R[14]]]],[11,R[33],E,E,2,[[["src"]],[R[14]]]],[11,R[11],E,E,2,[[["src"]],[R[14]]]],[11,R[13],E,E,2,[[],[R[14]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[11],E,E,3,[[[U]],[R[14]]]],[11,R[36],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[37]]]],[11,R[12],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[],[R[14]]]],[11,R[30],E,E,3,[[["src"]],[R[14]]]],[11,R[31],E,E,3,[[],[R[14]]]],[11,R[32],E,E,3,[[],[R[14]]]],[11,R[33],E,E,3,[[["src"]],[R[14]]]],[11,R[11],E,E,3,[[["src"]],[R[14]]]],[11,R[13],E,E,3,[[],[R[14]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,"into",E,E,4,[[],[U]]],[11,R[11],E,E,4,[[[U]],[R[14]]]],[11,R[36],E,E,4,[[["self"]],[T]]],[11,R[15],E,E,4,[[["self"]],[R[37]]]],[11,R[12],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[],[R[14]]]],[11,R[30],E,E,4,[[["src"]],[R[14]]]],[11,R[31],E,E,4,[[],[R[14]]]],[11,R[32],E,E,4,[[],[R[14]]]],[11,R[33],E,E,4,[[["src"]],[R[14]]]],[11,R[11],E,E,4,[[["src"]],[R[14]]]],[11,R[13],E,E,4,[[],[R[14]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[11],E,E,5,[[[U]],[R[14]]]],[11,R[36],E,E,5,[[["self"]],[T]]],[11,R[15],E,E,5,[[["self"]],[R[37]]]],[11,R[12],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[],[R[14]]]],[11,R[30],E,E,5,[[["src"]],[R[14]]]],[11,R[31],E,E,5,[[],[R[14]]]],[11,R[32],E,E,5,[[],[R[14]]]],[11,R[33],E,E,5,[[["src"]],[R[14]]]],[11,R[11],E,E,5,[[["src"]],[R[14]]]],[11,R[13],E,E,5,[[],[R[14]]]],[11,"from",R[53],E,6,[[[T]],[T]]],[11,"into",E,E,6,[[],[U]]],[11,R[11],E,E,6,[[[U]],[R[14]]]],[11,R[36],E,E,6,[[["self"]],[T]]],[11,R[15],E,E,6,[[["self"]],[R[37]]]],[11,R[12],E,E,6,[[["self"]],[T]]],[11,R[13],E,E,6,[[],[R[14]]]],[11,R[30],E,E,6,[[["src"]],[R[14]]]],[11,R[31],E,E,6,[[],[R[14]]]],[11,R[32],E,E,6,[[],[R[14]]]],[11,R[33],E,E,6,[[["src"]],[R[14]]]],[11,R[11],E,E,6,[[["src"]],[R[14]]]],[11,R[13],E,E,6,[[],[R[14]]]],[11,"as_any",E,E,6,[[["self"]],["any"]]],[11,R[39],E,E,6,[[["self"]],["any"]]],[11,"clone",R[29],E,1,[[["self"]],["size2d"]]],[11,"clone",E,E,2,[[["self"]],["gameconfig"]]],[11,"as_ref",E,E,5,[[["self"]],["str"]]],[11,R[16],E,E,1,[[["__s"],["self"]],[R[14]]]],[11,R[16],E,E,2,[[["__s"],["self"]],[R[14]]]],[11,R[16],E,E,5,[[["__s"],["self"]],[R[14]]]],[11,R[16],E,E,3,[[["__s"],["self"]],[R[14]]]],[11,R[17],E,E,1,[[["__d"]],[R[14]]]],[11,R[17],E,E,2,[[["__d"]],[R[14]]]],[11,R[17],E,E,5,[[["__d"]],[R[14]]]],[11,R[17],E,E,3,[[["__d"]],[R[14]]]],[11,"render",R[108],R[41],0,[[["bump"],["self"]],["node"]]],[11,"render",R[109],R[41],7,[[["bump"],["self"]],["node"]]],[11,"render",R[53],E,6,[[["bump"],["self"]],["node"]]]],"p":[[3,R[45]],[3,"Size2d"],[3,R[42]],[3,"Card"],[3,R[43]],[4,R[44]],[3,R[20]],[3,R[46]]]};
searchIndex[R[0]]={"doc":R[114],"i":[[3,"Player",R[0],R[60],N,N],[12,R[1],E,R[1],0,N],[12,"points",E,R[126],0,N],[4,R[18],E,R[127],N,N],[13,"Dummy",E,"Dummy",1,N],[12,"dummy",R[2],R[3],1,N],[13,R[62],R[0],R[128],1,N],[12,"test",R[2],R[3],1,N],[13,R[64],R[0],R[65],1,N],[12,R[66],R[2],R[129],1,N],[13,R[68],R[0],R[69],1,N],[12,R[4],R[2],R[5],1,N],[12,R[48],E,R[49],1,N],[13,R[115],R[0],R[71],1,N],[12,R[4],R[2],R[5],1,N],[12,R[6],E,R[7],1,N],[13,R[72],R[0],R[130],1,N],[12,R[74],R[2],R[75],1,N],[12,R[50],E,R[76],1,N],[12,R[6],E,R[7],1,N],[13,R[131],R[0],R[78],1,N],[12,R[4],R[2],R[79],1,N],[12,R[6],E,R[8],1,N],[12,R[80],E,R[81],1,N],[12,R[110],E,R[111],1,N],[13,R[132],R[0],R[78],1,N],[12,R[4],R[2],R[79],1,N],[12,R[6],E,R[8],1,N],[12,R[80],E,R[81],1,N],[12,R[110],E,R[111],1,N],[13,R[112],R[0],R[133],1,N],[12,R[4],R[2],R[79],1,N],[12,R[6],E,R[8],1,N],[13,R[125],R[0],R[84],1,N],[12,R[4],R[2],R[5],1,N],[12,R[6],E,R[8],1,N],[13,R[86],R[0],R[87],1,N],[12,R[88],R[2],R[89],1,N],[13,R[90],R[0],R[91],1,N],[12,"json",R[2],R[92],1,N],[4,R[113],R[0],R[134],N,N],[13,R[116],E,R[117],2,N],[13,R[118],E,R[119],2,N],[13,R[120],E,R[121],2,N],[13,R[104],E,R[104],2,N],[13,R[97],E,R[98],2,N],[13,R[99],E,R[100],2,N],[13,"TakeTurnBegin",E,"take turn begin",2,N],[13,R[125],E,"take turn end",2,N],[13,R[112],E,R[10],2,N],[13,R[102],E,R[103],2,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[36],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[37]]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[],[R[14]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[11],E,E,1,[[[U]],[R[14]]]],[11,R[36],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[37]]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[],[R[14]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[34],E,E,2,[[["self"]],[T]]],[11,R[35],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[14]]]],[11,R[36],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[37]]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[],[R[14]]]],[11,"clone",E,E,2,[[["self"]],[R[107]]]],[11,"as_ref",E,E,2,[[["self"]],["str"]]],[11,R[16],E,E,1,[[["__s"],["self"]],[R[14]]]],[11,R[16],E,E,2,[[["__s"],["self"]],[R[14]]]],[11,R[16],E,E,0,[[["__s"],["self"]],[R[14]]]],[11,R[17],E,E,1,[[["__d"]],[R[14]]]],[11,R[17],E,E,2,[[["__d"]],[R[14]]]],[11,R[17],E,E,0,[[["__d"]],[R[14]]]]],"p":[[3,"Player"],[4,R[18]],[4,R[113]]]};
searchIndex[R[0]]={"doc":R[114],"i":[[3,"Player",R[0],R[60],N,N],[12,R[1],E,R[1],0,N],[12,"points",E,R[126],0,N],[4,R[18],E,R[127],N,N],[13,"Dummy",E,"Dummy",1,N],[12,"dummy",R[2],R[3],1,N],[13,R[62],R[0],R[128],1,N],[12,"test",R[2],R[3],1,N],[13,R[64],R[0],R[65],1,N],[12,R[66],R[2],R[129],1,N],[13,R[68],R[0],R[69],1,N],[12,R[4],R[2],R[5],1,N],[12,R[48],E,R[49],1,N],[13,R[115],R[0],R[71],1,N],[12,R[4],R[2],R[5],1,N],[12,R[6],E,R[7],1,N],[13,R[72],R[0],R[130],1,N],[12,R[74],R[2],R[75],1,N],[12,R[50],E,R[76],1,N],[12,R[6],E,R[7],1,N],[13,R[131],R[0],R[78],1,N],[12,R[4],R[2],R[79],1,N],[12,R[6],E,R[8],1,N],[12,R[80],E,R[81],1,N],[12,R[110],E,R[111],1,N],[13,R[132],R[0],R[78],1,N],[12,R[4],R[2],R[79],1,N],[12,R[6],E,R[8],1,N],[12,R[80],E,R[81],1,N],[12,R[110],E,R[111],1,N],[13,R[112],R[0],R[133],1,N],[12,R[4],R[2],R[79],1,N],[12,R[6],E,R[8],1,N],[13,R[83],R[0],R[84],1,N],[12,R[4],R[2],R[5],1,N],[12,R[6],E,R[8],1,N],[13,R[86],R[0],R[87],1,N],[12,R[88],R[2],R[89],1,N],[13,R[90],R[0],R[91],1,N],[12,"json",R[2],R[92],1,N],[4,R[113],R[0],R[134],N,N],[13,R[116],E,R[117],2,N],[13,R[118],E,R[119],2,N],[13,R[120],E,R[121],2,N],[13,R[104],E,R[104],2,N],[13,R[97],E,R[98],2,N],[13,R[99],E,R[100],2,N],[13,R[105],E,R[101],2,N],[13,R[112],E,R[10],2,N],[13,R[102],E,R[103],2,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[36],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[37]]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[],[R[14]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[11],E,E,1,[[[U]],[R[14]]]],[11,R[36],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[37]]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[],[R[14]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[34],E,E,2,[[["self"]],[T]]],[11,R[35],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[14]]]],[11,R[36],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[37]]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[],[R[14]]]],[11,"clone",E,E,2,[[["self"]],[R[107]]]],[11,"as_ref",E,E,2,[[["self"]],["str"]]],[11,R[16],E,E,1,[[["__s"],["self"]],[R[14]]]],[11,R[16],E,E,2,[[["__s"],["self"]],[R[14]]]],[11,R[16],E,E,0,[[["__s"],["self"]],[R[14]]]],[11,R[17],E,E,1,[[["__d"]],[R[14]]]],[11,R[17],E,E,2,[[["__d"]],[R[14]]]],[11,R[17],E,E,0,[[["__d"]],[R[14]]]]],"p":[[3,"Player"],[4,R[18]],[4,R[113]]]};
searchIndex[R[0]]={"doc":R[114],"i":[[3,"Player",R[0],R[60],N,N],[12,R[1],E,R[1],0,N],[12,"points",E,R[47],0,N],[4,R[18],E,R[61],N,N],[13,"Dummy",E,"Dummy",1,N],[12,"dummy",R[2],R[3],1,N],[13,R[62],R[0],R[63],1,N],[12,"test",R[2],R[3],1,N],[13,R[64],R[0],R[65],1,N],[12,R[66],R[2],R[67],1,N],[13,R[68],R[0],R[69],1,N],[12,R[4],R[2],R[5],1,N],[12,R[48],E,R[49],1,N],[13,R[115],R[0],R[71],1,N],[12,R[4],R[2],R[5],1,N],[12,R[6],E,R[7],1,N],[13,R[72],R[0],R[73],1,N],[12,R[74],R[2],R[75],1,N],[12,R[50],E,R[76],1,N],[12,R[6],E,R[7],1,N],[13,R[77],R[0],R[78],1,N],[12,R[4],R[2],R[79],1,N],[12,R[6],E,R[8],1,N],[12,R[80],E,R[81],1,N],[12,R[51],E,R[82],1,N],[13,R[83],R[0],R[84],1,N],[12,R[4],R[2],R[5],1,N],[12,R[6],E,R[8],1,N],[13,R[85],R[0],R[10],1,N],[12,R[4],R[2],R[5],1,N],[12,R[6],E,R[8],1,N],[13,R[86],R[0],R[87],1,N],[12,R[88],R[2],R[89],1,N],[13,R[90],R[0],R[91],1,N],[12,"json",R[2],R[92],1,N],[4,R[19],R[0],R[93],N,N],[13,R[116],E,R[117],2,N],[13,R[118],E,R[119],2,N],[13,R[120],E,R[121],2,N],[13,R[104],E,R[104],2,N],[13,R[97],E,R[98],2,N],[13,R[99],E,R[100],2,N],[13,R[105],E,R[101],2,N],[13,R[85],E,R[10],2,N],[13,R[102],E,R[103],2,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[36],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[37]]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[],[R[14]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[11],E,E,1,[[[U]],[R[14]]]],[11,R[36],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[37]]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[],[R[14]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[34],E,E,2,[[["self"]],[T]]],[11,R[35],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[14]]]],[11,R[36],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[37]]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[],[R[14]]]],[11,"clone",E,E,2,[[["self"]],[R[52]]]],[11,"as_ref",E,E,2,[[["self"]],["str"]]],[11,R[16],E,E,1,[[["__s"],["self"]],[R[14]]]],[11,R[16],E,E,2,[[["__s"],["self"]],[R[14]]]],[11,R[16],E,E,0,[[["__s"],["self"]],[R[14]]]],[11,R[17],E,E,1,[[["__d"]],[R[14]]]],[11,R[17],E,E,2,[[["__d"]],[R[14]]]],[11,R[17],E,E,0,[[["__d"]],[R[14]]]]],"p":[[3,"Player"],[4,R[18]],[4,R[19]]]};
searchIndex[R[0]]={"doc":R[59],"i":[[3,"Player",R[0],R[60],N,N],[12,R[1],E,R[1],0,N],[12,"points",E,R[47],0,N],[4,R[18],E,R[61],N,N],[13,"Dummy",E,"Dummy",1,N],[12,"dummy",R[2],R[3],1,N],[13,R[62],R[0],R[63],1,N],[12,"test",R[2],R[3],1,N],[13,R[64],R[0],R[65],1,N],[12,R[66],R[2],R[67],1,N],[13,R[68],R[0],R[69],1,N],[12,R[4],R[2],R[5],1,N],[12,R[48],E,R[49],1,N],[13,R[70],R[0],R[71],1,N],[12,R[4],R[2],R[5],1,N],[12,R[6],E,R[7],1,N],[13,R[72],R[0],R[73],1,N],[12,R[74],R[2],R[75],1,N],[12,R[50],E,R[76],1,N],[12,R[6],E,R[7],1,N],[13,R[77],R[0],R[78],1,N],[12,R[4],R[2],R[79],1,N],[12,R[6],E,R[8],1,N],[12,R[80],E,R[81],1,N],[12,R[51],E,R[82],1,N],[13,R[83],R[0],R[84],1,N],[12,R[4],R[2],R[5],1,N],[12,R[6],E,R[8],1,N],[13,R[85],R[0],R[10],1,N],[12,R[4],R[2],R[5],1,N],[12,R[6],E,R[8],1,N],[13,R[86],R[0],R[87],1,N],[12,R[88],R[2],R[89],1,N],[13,R[90],R[0],R[91],1,N],[12,"json",R[2],R[92],1,N],[4,R[19],R[0],R[93],N,N],[13,"Start",E,R[94],2,N],[13,"Asking",E,R[95],2,N],[13,"Asked",E,R[96],2,N],[13,R[9],E,R[9],2,N],[13,R[97],E,R[98],2,N],[13,R[99],E,R[100],2,N],[13,R[105],E,R[101],2,N],[13,R[85],E,R[10],2,N],[13,R[102],E,R[103],2,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[36],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[37]]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[],[R[14]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[11],E,E,1,[[[U]],[R[14]]]],[11,R[36],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[37]]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[],[R[14]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[34],E,E,2,[[["self"]],[T]]],[11,R[35],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[14]]]],[11,R[36],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[37]]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[],[R[14]]]],[11,"clone",E,E,2,[[["self"]],[R[52]]]],[11,"as_ref",E,E,2,[[["self"]],["str"]]],[11,R[16],E,E,1,[[["__s"],["self"]],[R[14]]]],[11,R[16],E,E,2,[[["__s"],["self"]],[R[14]]]],[11,R[16],E,E,0,[[["__s"],["self"]],[R[14]]]],[11,R[17],E,E,1,[[["__d"]],[R[14]]]],[11,R[17],E,E,2,[[["__d"]],[R[14]]]],[11,R[17],E,E,0,[[["__d"]],[R[14]]]]],"p":[[3,"Player"],[4,R[18]],[4,R[19]]]};
searchIndex[R[0]]={"doc":R[59],"i":[[3,"Player",R[0],R[60],N,N],[12,R[1],E,R[1],0,N],[12,"points",E,R[47],0,N],[4,R[18],E,R[61],N,N],[13,"Dummy",E,"Dummy",1,N],[12,"dummy",R[2],R[3],1,N],[13,R[62],R[0],R[63],1,N],[12,"test",R[2],R[3],1,N],[13,R[64],R[0],R[65],1,N],[12,R[66],R[2],R[67],1,N],[13,R[68],R[0],R[69],1,N],[12,R[4],R[2],R[5],1,N],[12,R[48],E,R[49],1,N],[13,R[70],R[0],R[71],1,N],[12,R[4],R[2],R[5],1,N],[12,R[6],E,R[7],1,N],[13,R[72],R[0],R[73],1,N],[12,R[74],R[2],R[75],1,N],[12,R[50],E,R[76],1,N],[12,R[6],E,R[7],1,N],[13,R[77],R[0],R[78],1,N],[12,R[4],R[2],R[79],1,N],[12,R[6],E,R[8],1,N],[12,R[80],E,R[81],1,N],[12,R[51],E,R[82],1,N],[13,R[83],R[0],R[84],1,N],[12,R[4],R[2],R[5],1,N],[12,R[6],E,R[8],1,N],[13,R[85],R[0],R[10],1,N],[12,R[4],R[2],R[5],1,N],[12,R[6],E,R[8],1,N],[13,R[86],R[0],R[87],1,N],[12,R[88],R[2],R[89],1,N],[13,R[90],R[0],R[91],1,N],[12,"json",R[2],R[92],1,N],[4,R[19],R[0],R[93],N,N],[13,"Start",E,R[94],2,N],[13,"Asking",E,R[95],2,N],[13,"Asked",E,R[96],2,N],[13,R[9],E,R[9],2,N],[13,R[97],E,R[98],2,N],[13,R[99],E,R[100],2,N],[13,R[105],E,R[101],2,N],[13,R[85],E,R[10],2,N],[13,R[102],E,R[103],2,N],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[],[U]]],[11,R[11],E,E,0,[[[U]],[R[14]]]],[11,R[36],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[37]]]],[11,R[12],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[],[R[14]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[],[U]]],[11,R[11],E,E,1,[[[U]],[R[14]]]],[11,R[36],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[37]]]],[11,R[12],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[],[R[14]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[34],E,E,2,[[["self"]],[T]]],[11,R[35],E,E,2,[[[T],["self"]]]],[11,R[11],E,E,2,[[[U]],[R[14]]]],[11,R[36],E,E,2,[[["self"]],[T]]],[11,R[15],E,E,2,[[["self"]],[R[37]]]],[11,R[12],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[],[R[14]]]],[11,"clone",E,E,2,[[["self"]],[R[52]]]],[11,"as_ref",E,E,2,[[["self"]],["str"]]],[11,R[16],E,E,1,[[["__s"],["self"]],[R[14]]]],[11,R[16],E,E,2,[[["__s"],["self"]],[R[14]]]],[11,R[16],E,E,0,[[["__s"],["self"]],[R[14]]]],[11,R[17],E,E,1,[[["__d"]],[R[14]]]],[11,R[17],E,E,2,[[["__d"]],[R[14]]]],[11,R[17],E,E,0,[[["__d"]],[R[14]]]]],"p":[[3,"Player"],[4,R[18]],[4,R[19]]]};
searchIndex[R[21]]={"doc":R[124],"i":[[5,R[55],R[21],R[56],N,[[],[["ipaddr"],["option",["ipaddr"]]]]],[5,R[57],E,R[58],N,[[]]]],"p":[]};
searchIndex[R[21]]={"doc":R[124],"i":[[5,R[55],R[21],R[56],N,[[],[["ipaddr"],["option",["ipaddr"]]]]],[5,R[57],E,R[58],N,[[]]]],"p":[]};
searchIndex[R[21]]={"doc":R[54],"i":[[5,R[55],R[21],R[56],N,[[],[["ipaddr"],["option",["ipaddr"]]]]],[5,R[57],E,R[58],N,[[]]]],"p":[]};
searchIndex[R[21]]={"doc":R[54],"i":[[5,R[55],R[21],R[56],N,[[],[["ipaddr"],["option",["ipaddr"]]]]],[5,R[57],E,R[58],N,[[]]]],"p":[]};
searchIndex[R[21]]={"doc":R[54],"i":[[5,R[55],R[21],R[56],N,[[],[["ipaddr"],["option",["ipaddr"]]]]],[5,R[57],E,R[58],N,[[]]]],"p":[]};
initSearch(searchIndex);addSearchOptions(searchIndex);